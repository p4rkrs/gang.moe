upstream backend {
	server 127.0.0.1:9999; # Change to the port you specified on lolisafe
}

map $sent_http_content_type $charset {
	~^text/ utf-8;
}

server {
	listen 80;
	listen [::]:80;
	server_name gang.moe;
	return 301 https://$server_name$request_uri;
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name gang.moe;
	server_tokens off;

	ssl_trusted_certificate  /root/.acme.sh/gang.mù_ecc/ca.cer;
    ssl_certificate          /root/.acme.sh/gang.mù_ecc/fullchain.cer;
    ssl_certificate_key      /root/.acme.sh/gang.mù_ecc/waifu.social.key;

    # Add TLSv1.0 to support older devices
    ssl_protocols TLSv1.2 TLSv1.3;
    # Uncomment line below if you want to support older devices (Before Android 4.4.2, IE 8, etc.)
    # ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_ciphers TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-256-GCM-SHA384:TLS13-AES-128-GCM-SHA256:EECDH+CHACHA20:EECDH+AESGCM:EECDH+AES;
    ssl_prefer_server_ciphers on;
    # In case of an old server with an OpenSSL version of 1.0.2 or below,
    # leave only prime256v1 or comment out the following line.
    ssl_ecdh_curve X25519:prime256v1:secp384r1:secp521r1;
    ssl_stapling on;
    ssl_stapling_verify on;

	client_max_body_size 200M; # Change this to the max file size you want to allow

	charset $charset;
	charset_types *;

	# Uncomment if you are running lolisafe behind CloudFlare.
	# This requires NGINX compiled from source with:
	#	--with-http_realip_module
	#include /path/to/lolisafe/real-ip-from-cf;

	location / {
		add_header Access-Control-Allow-Origin *;
		root /path/to/your/uploads/folder;
		try_files $uri @proxy;
	}

	location @proxy {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-NginX-Proxy true;
		proxy_pass http://backend;
		proxy_redirect off;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_redirect off;
		proxy_set_header X-Forwarded-Proto $scheme;
	}
}
